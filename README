To compile:
    Verbose version:
        g++ -Wall -DVERBOSE -O3 -o subset_sum subset_sum_main.cpp

    Verbose version (with ANSI color):
        g++ -Wall -DVERBOSE -DENABLE_COLOR -O3 -o subset_sum subset_sum_main.cpp

    Quiet (fast) version:
        g++ -Wall -O3 -o subset_sum subset_sum_main.cpp

    Jun's Algorithm Enable Flag:
    g++ -Wall -DNEXT_SUBSET_JUN_LIU -O3 -o subset_sum subset_sum_main.cpp

    Ross's Timestamp Enable Flag:
	g++ -Wall -DTIMESTAMP -O3 -o subset_sum subset_sum_main.cpp

To run:
    ./subset_sum <M> <N>
    Where <M> is the maximum set value, and <N> is the number of elements 
    in the set.  This will calculate it for all subsets.

    ./subset_sum <M> <N> <i> <count>
    This will start from the <i>th subset of the problem for <M> and <N>,
    and compute the next <count> subsets.


TODO:
    *   Use a fast factorial function, speed up the n_choose_k function.
        Also, speed up the repeated calls to n_choose_k in the generate 
        subset function.

    *   Double check that the 'all_ones', 'or_single', 'or_equal' and 
        'shift_left' functions are working correctly.

    *   Update the code so that instead of checking all sums up to the 
        sum of all set elements, we only need to check up to the sum 
        of all set elements divided by 2 (as the sums are symmetric).

    *   Update the code so that we're only checking the sums that have
        the largest number in them (this will mean we have to check
        about half as many sets) -- the other sets were redudantly
        checked in smaller M choose Ns.

BUGS:
    *   No known bugs at the moment.

NOTES:
    *   Added an ENABLE_COLOR compiler flag, which will print out the 
        subset sums we want to verify in green (and any missing ones in red).

    *   Added Jun's algorithm for generating the next subset (looks like it 
        needs to be debugged). This can be turned on with:
            -DNEXT_SUBSET_JUN_LIU

    *   Added Time-stamping flag to beginning and end of program enable with:
            -DTIMESTAMP

    *   Added check so that if N is greater than M it will produce an error
        message instead of hanging the program unnecessarily.
